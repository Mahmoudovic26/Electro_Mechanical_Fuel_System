/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef MAINVIEWBASE_HPP
#define MAINVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/main_screen/mainPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/BoxWithBorder.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/Gauge.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565Bitmap.hpp>

class mainViewBase : public touchgfx::View<mainPresenter>
{
public:
    mainViewBase();
    virtual ~mainViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::TextAreaWithOneWildcard companyName;
    touchgfx::BoxWithBorder boxWithBorder1;
    touchgfx::ScalableImage main_bg;
    touchgfx::BoxWithBorder topSpacer;
    touchgfx::BoxWithBorder headerSpacer;
    touchgfx::BoxWithBorder bottomSpacer;
    touchgfx::BoxWithBorder leftSideTopSpacer;
    touchgfx::BoxWithBorder rightSideTopSpacer;
    touchgfx::BoxWithBorder rightSideBottomSpacer;
    touchgfx::TextArea RPM;
    touchgfx::TextArea VFDController;
    touchgfx::TextArea systemVoltage;
    touchgfx::TextArea cableStatus;
    touchgfx::TextArea NH1;
    touchgfx::TextArea NH1EMU;
    touchgfx::TextArea NH1RTM;
    touchgfx::TextArea RTDRTM;
    touchgfx::TextArea vfdOutputFrequancy;
    touchgfx::TextArea systemTime;
    touchgfx::TextAreaWithOneWildcard RPMValue;
    touchgfx::TextAreaWithOneWildcard systemVoltageValue;
    touchgfx::TextAreaWithOneWildcard NH1ValueVolt;
    touchgfx::TextArea RTD;
    touchgfx::TextArea RTDEMU;
    touchgfx::TextAreaWithOneWildcard RTDValue;
    touchgfx::TextArea TC;
    touchgfx::TextAreaWithOneWildcard TCValue;
    touchgfx::TextAreaWithOneWildcard NH1ValueFreq;
    touchgfx::TextArea NH2;
    touchgfx::TextAreaWithOneWildcard NH2ValueVolt;
    touchgfx::TextAreaWithOneWildcard NH2ValueFreq;
    touchgfx::TextArea NPT1;
    touchgfx::TextAreaWithOneWildcard NPT1ValueVolt;
    touchgfx::TextAreaWithOneWildcard NPT1ValueFreq;
    touchgfx::TextArea NPT2;
    touchgfx::TextAreaWithOneWildcard NPT2ValueVolt;
    touchgfx::TextAreaWithOneWildcard NPT2ValueFreq;
    touchgfx::TextAreaWithOneWildcard systemTimeValue;
    touchgfx::TextArea cableStatusValueConnected;
    touchgfx::TextArea cableStatusValueDisconnected;
    touchgfx::TextAreaWithOneWildcard vfdOutputFrequancyValue;
    touchgfx::Gauge vfdGauge;
    touchgfx::PainterRGB565Bitmap vfdGaugePainter;
    touchgfx::ScalableImage scalableImage1;
    touchgfx::TextArea deviceName;
    touchgfx::Box shortcutBox;
    touchgfx::TextArea projectShortcutName;

    /*
     * Wildcard Buffers
     */
    static const uint16_t COMPANYNAME_SIZE = 10;
    touchgfx::Unicode::UnicodeChar companyNameBuffer[COMPANYNAME_SIZE];
    static const uint16_t RPMVALUE_SIZE = 26;
    touchgfx::Unicode::UnicodeChar RPMValueBuffer[RPMVALUE_SIZE];
    static const uint16_t SYSTEMVOLTAGEVALUE_SIZE = 26;
    touchgfx::Unicode::UnicodeChar systemVoltageValueBuffer[SYSTEMVOLTAGEVALUE_SIZE];
    static const uint16_t NH1VALUEVOLT_SIZE = 26;
    touchgfx::Unicode::UnicodeChar NH1ValueVoltBuffer[NH1VALUEVOLT_SIZE];
    static const uint16_t RTDVALUE_SIZE = 26;
    touchgfx::Unicode::UnicodeChar RTDValueBuffer[RTDVALUE_SIZE];
    static const uint16_t TCVALUE_SIZE = 26;
    touchgfx::Unicode::UnicodeChar TCValueBuffer[TCVALUE_SIZE];
    static const uint16_t NH1VALUEFREQ_SIZE = 26;
    touchgfx::Unicode::UnicodeChar NH1ValueFreqBuffer[NH1VALUEFREQ_SIZE];
    static const uint16_t NH2VALUEVOLT_SIZE = 26;
    touchgfx::Unicode::UnicodeChar NH2ValueVoltBuffer[NH2VALUEVOLT_SIZE];
    static const uint16_t NH2VALUEFREQ_SIZE = 26;
    touchgfx::Unicode::UnicodeChar NH2ValueFreqBuffer[NH2VALUEFREQ_SIZE];
    static const uint16_t NPT1VALUEVOLT_SIZE = 26;
    touchgfx::Unicode::UnicodeChar NPT1ValueVoltBuffer[NPT1VALUEVOLT_SIZE];
    static const uint16_t NPT1VALUEFREQ_SIZE = 26;
    touchgfx::Unicode::UnicodeChar NPT1ValueFreqBuffer[NPT1VALUEFREQ_SIZE];
    static const uint16_t NPT2VALUEVOLT_SIZE = 26;
    touchgfx::Unicode::UnicodeChar NPT2ValueVoltBuffer[NPT2VALUEVOLT_SIZE];
    static const uint16_t NPT2VALUEFREQ_SIZE = 26;
    touchgfx::Unicode::UnicodeChar NPT2ValueFreqBuffer[NPT2VALUEFREQ_SIZE];
    static const uint16_t SYSTEMTIMEVALUE_SIZE = 26;
    touchgfx::Unicode::UnicodeChar systemTimeValueBuffer[SYSTEMTIMEVALUE_SIZE];
    static const uint16_t VFDOUTPUTFREQUANCYVALUE_SIZE = 90;
    touchgfx::Unicode::UnicodeChar vfdOutputFrequancyValueBuffer[VFDOUTPUTFREQUANCYVALUE_SIZE];

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 19200;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

};

#endif // MAINVIEWBASE_HPP
